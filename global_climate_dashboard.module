<?php
  /*
   * The global_climate_dashboard module tests out setting up a block using the block API and
   * rendering some content in the block using a renderable array.
   */

/**
 * Implements hook_init
 */
  /* I think we can add css and js files when the block is viewed, rather than here
function global_climate_dashboard_init() {
  drupal_add_css(drupal_get_path('module', 'global_climate_dashboard') . "/global_climate_dashboard.css");
  drupal_add_js(drupal_get_path('module', 'global_climate_dashboard') . "/swfobject.js");
}
  */

  /*
   * Implements hook_block_info().
   */
function global_climate_dashboard_block_info() {
  /*
   * $blocks[] Defines the blocks controlled by this module.
   */
  $blocks['global_climate_dashboard'] =
    array(
          'info' => t('Global Climate Dashboard'),
          );
  return $blocks;
}

/*
 * Implements hook_block_configure().
 */
function global_climate_dashboard_block_configure($delta) {
  $form = array();
  switch ($delta) {
  case 'global_climate_dashboard':
    /* Variables needed
       $width
       $height
       $swf_path
       $config_path
       Set variables: variable_set($name, $value)
       Get variables: variable_get($name, $default = NULL)
       Set default (in block config form): '#default_value' => variable_get($name, $default = NULL),
    */
    $form['width'] = array(
			   '#type' => 'textfield',
			   '#title' => 'Dashboard Width',
			   '#description' => 'The pixel width for the dashboard',
			   '#default_value' => variable_get('global_climate_dashboard_width'),
			   );

    $form['height'] = array(
			    '#type' => 'textfield',
			    '#title' => 'Dashboard Height',
			    '#description' => 'The pixel height for the dashboard',
			    '#default_value' => variable_get('global_climate_dashboard_height'),
			    );

    $form['config_path'] = array(
				 '#type' => 'textfield',
				 '#title' => 'Dashboard Config Path',
				 '#description' => 'The URL of the dashboard xml configuration file to load',
				 '#default_value' => variable_get('global_climate_dashboard_config_path'),
				 );

    $form['assets_path'] = array(
				 '#type' => 'textfield',
				 '#title' => 'Dashboard Assets Path',
				 '#description' => 'The URL of the dashboard `assets` directory',
				 '#default_value' => variable_get('global_climate_dashboard_assets_path'),
				 );

    $form['swf_path'] = array(
			      '#type' => 'textfield',
			      '#title' => 'Flash fallback version SWF Path',
			      '#description' => 'The path to the dashboard flash swf file; if this it not an absolute url, it is interpreted relative to the Drupal installation directory',
			      '#default_value' => variable_get('global_climate_dashboard_swf_path'),
			      );

    $form['swf_config_path'] = array(
			      '#type' => 'textfield',
			      '#title' => 'Dashboard config path for flash fallback verison',
			      '#description' => 'The URL of the dashboard xml configuration file to load for the flash fallback version',
			      '#default_value' => variable_get('global_climate_dashboard_swf_config_path'),
			      );

    break;
  }
  return $form;
}	

/*
 * Implements hook_block_save().
 */
function global_climate_dashboard_block_save($delta ='', $edit = array()) {
  switch ($delta) {
  case 'global_climate_dashboard':
    // Setting the dashboard variables from form values
    variable_set('global_climate_dashboard_width', $edit['width']);
    variable_set('global_climate_dashboard_height', $edit['height']);
    variable_set('global_climate_dashboard_config_path', $edit['config_path']);
    variable_set('global_climate_dashboard_assets_path', $edit['assets_path']);
    variable_set('global_climate_dashboard_swf_path', $edit['swf_path']);
    variable_set('global_climate_dashboard_swf_config_path', $edit['swf_config_path']);
    break;
  }	
}

/*
 * Implements hook_block_view().
 */
function global_climate_dashboard_block_view($delta = '') {
  switch($delta) {
  case 'global_climate_dashboard':
    $block['content'] = global_climate_dashboard_contents($delta);	
    return $block;
    break;
  }
}


/*
 * Custom function to render the 'mugl' field.
 */
function global_climate_dashboard_contents($delta) {
  switch($delta) {
  case 'global_climate_dashboard':
    drupal_add_css(drupal_get_path('module', 'global_climate_dashboard') . "/global_climate_dashboard.css");
    drupal_add_css(drupal_get_path('module', 'global_climate_dashboard') . "/html5-app/dashboard.css");
    drupal_add_js(drupal_get_path('module', 'global_climate_dashboard') . "/html5-app/dashboard-min.js");

    $width           = variable_get('global_climate_dashboard_width');
    $height          = variable_get('global_climate_dashboard_height');
    $config_path     = variable_get('global_climate_dashboard_config_path');
    $assets_path     = variable_get('global_climate_dashboard_assets_path');
    $swf_path        = variable_get('global_climate_dashboard_swf_path');
    $swf_config_path = variable_get('global_climate_dashboard_swf_config_path');

    if (strpos($swf_path, '://') === false) {
      // if the swf_path is not an absolute url, prepend the drupal base path to it:
      $swf_path = base_path() . $swf_path;
    }

    return array('#markup' => <<<EOF
<div id="global-climate-dashboard"></div>
<script type="text/javascript">
  dashboard.$(document).ready(function() {
    dashboard.$('#global-climate-dashboard').dashboard({
      config : '$config_path',
      assets : '$assets_path',
      flash  : {
         force             : false,
         swf_path          : '$swf_path',
         config            : '$swf_config_path'
      }
    });
  });
</script>
EOF
		 );

    break;
  }
}
