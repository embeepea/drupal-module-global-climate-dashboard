<?php
/*
 * The dashboard module tests out setting up a block using the block API and
 * rendering some content in the block using a renderable array.
*/

/*
 * Implements hook_block_info().
*/
function dashboard_block_info() {
/*
 * $blocks[] Defines the blocks controlled by this module.
*/
	$blocks['display_mugl'] = array(
		'info' => t('Display mugl data'),
		'status' => TRUE,
		'region' => 'sidebar_second',
		'weight' => 0,
		'visibility' => 1,
	);
	
	return $blocks;
}

/*
 * Implements hook_block_configure().
*/
function dashboard_block_configure($delta) {
	$form = array();

	switch ($delta) {
	case 'display_mugl':
/* using the filter
		$form['mugl_data'] = array(
			'#type' => 'textarea',
			'#title' => 'Configure mugl data',
			'#rows' => 10,
			'#cols' => 10,
			'#description' => 'Paste the mugl data to display in the block.',
			'#default_value' => '',
		);
			break;
*/
		// Selects previously entered value
		$mugl_query = db_query("SELECT mugl FROM {dashboard_mugl} WHERE mgid = :mgid", array(':mgid' => 1) )->fetchField();
		$form['mugl'] = array(
			'#type' => 'text_format',
			'#title' => 'Mugl data file',
			'#format' => 'full_html_and_multigraph',
			'#description' => 'Reference a mugl file using the "Full HTML and multigraph" input format.',
			'#default_value' => $mugl_query,
		);
/*		$form['mugl_description'] = array(
		);
		$form['mugl_swf'] = array(
		);
		$form['mugl_nid'] = array(
		);
*/
		break;
	}
	return $form;
}

/*
 * Implements hook_block_save().
*/
function dashboard_block_save($delta ='', $edit = array()) {
	switch ($delta) {
		case 'display_mugl':
		// dsm($edit);
			db_merge('dashboard_mugl')
//			->key(array('mgid' => ??? )) // How do I get the mgid key?
				->key(array('mgid' => 1 )) // Sets mgid to 1 to limit to one row
				->fields(array(
//				'mgid' => ???,
					'mgid' => 1,
					'mugl' => $edit['mugl']['value'],
				))
/* not necessary since the fields are the same
				->updateFields(array(	
					'mgid' => 1,
					'mugl' => $edit['mugl']['value'],
				))
*/
				->execute();
			break;
	}	
}

/*
 * Implements hook_block_view().
*/
function dashboard_block_view($delta = '') {
//			dsm('Hello world');
	switch($delta) {
		case 'display_mugl':
			//dsm('Hello world');
			$block['subject'] = 'Mugl Dashboard';
			$block['content'] = dashboard_contents($delta);	
//			$block['content'] = array('#markup' => 'This is where the Mugl Dashboard should go.');
			return $block;
		break;
	}
}

/*
 * Custom function to render the 'mugl' field.
*/
function dashboard_contents($delta) {
	switch($delta) {
		case 'display_mugl':
//			$mugl_query = db_query("SELECT mugl FROM {dashboard_mugl} WHERE mgid = :mgid", array(':mgid' => 1) )->fetchField();	
//			return array('#markup' => $mugl_query);
			return array('#markup' => <<<EOF
<object
  id="Global Climate Dashboard"
  classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000"
  width="534"
  height="700"
  codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0">
    <param name="align" value="middle" />
    <param name="allowScriptAccess" value="sameDomain" />
    <param name="allowFullScreen" value="false" />
    <param name="quality" value="best" />
    <param name="scale" value="exactfit" />
    <param name="wmode" value="opaque" />
    <param name="bgcolor" value="#ffffff" />
    <param name="src" value="/jmarchesmg/sites/all/modules/dashboard/Dashboard.swf" />
    <param name="flashvars" value="config=http://dashboard.nemac.org/sites/default/files/versions/2012-07-06/data/dashboard.xml" />
    <param name="name" value="Global Climate Dashboard" />
<embed
  id="Global Climate Dashboard"
  type="application/x-shockwave-flash"
  width="534"
  height="700"
  src="/jmarchesmg/sites/all/modules/dashboard/Dashboard.swf"
  name="Global Climate Dashboard"
  bgcolor="#ffffff"
  wmode="opaque"
  scale="exactfit"
  quality="best"
  flashvars="config=http://dashboard.nemac.org/sites/default/files/versions/2012-07-06/data/dashboard.xml"
  allowfullscreen="false"
  allowscriptaccess="sameDomain"
  align="middle">
</embed>
</object>
EOF
);
			break;
	}
}
